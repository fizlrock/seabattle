
openapi: 3.1.0
info:
  title: Seabattle API 
  description: |-
    Сервис для игры в морской бой
  contact:
    email: nirku0soft@yandex.ru
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1



servers:
  - url: https://localhost:8080/api

paths:

  /seabattle/token:
    get:
      summary: >
        Получить токен авторизации
      operationId: getToken
      requestBody:
       content:
        'application/json':
           schema:
             $ref: '#/components/schemas/auth_data_dto'
      responses:
        200:
          description: Токен авторизации
          content:
            application/json:
              schema:
                type: string
                examples:
                  - Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvZSBEb2UiLCJhZG1pbiI6dHJ1ZSwiaWF0IjoxNTE2MjM5MDIyfQ.SdUMMAsFFk83SHyqGjfQ1pt8v_8t4WZku5Ty3CLMaH4


  
  /seabattle/placement_strategy:
    get:
      summary: > 
       Получить список стратегий создания карты
       расстановкий кораблей

      security:
        - bearerAuth: []
      operationId: getPlacementStrategies

      responses:
        '200':
          description: Список стратегий расстановки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placement_strategy_dto'
  
  /seabattle/boat_placement:
    get:
      summary: >
        Сгенерировать расстановку кораблей по заданной стратегии
      operationId: getGeneratedBoatSpec
      security:
        - bearerAuth: []
      parameters:
        - name: strategy_id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Расстановка кораблей
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/boat_cords_dto'
                
  /seabattle/game/settings:
    get:
      operationId: getGameSettings
      summary: >
        Получить список параметров игры
      responses:
        '200':
          description: Настройки игры
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game_settings_dto'
  /seabattle/game/shot:
    post:
      summary: Сделать выстрел по полю противника
      operationId: makeShot
      security:
        - bearerAuth: []
      requestBody:
       content:
        'application/json':
           schema:
             $ref: '#/components/schemas/shot_dto'
      responses:
        '200':
          description: Состояние карты
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game_state_dto'
  /seabattle/game:
    get:
      summary : Получить состояние игры, если оно изменилось(вебхук).
      description: |
        Получить состояние игры, если оно изменилось(вебхук).
        В параметрах необходимо указать текущую версию состояния игры - currentState.
        Если currentStateNumber не совпадет с stateNumber сервер вернет текущий game_state_dto. 
        Так же сервер вернет game_state_dto если истечет таймаут. 

      operationId: getUpdatedGameState
      security:
        - bearerAuth: []
      parameters:
        - name: currentStateNumber
          in : query
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        200:
          description: Новое состояние игры.
          content:
            applicaton/json:
              schema:
                $ref: '#/components/schemas/game_state_dto'
        208:
          description: |
            Cостояние игры с переданным currentStateNumber.
            Такой ответ означает истечение таймаута.
          content:
            applicaton/json:
              schema:
                $ref: '#/components/schemas/game_state_dto'

                
          
    post:
      summary: Начать новую игру
      description: Начать новую игру
      operationId: startNewGame

      security:
        - bearerAuth: []

      requestBody:
       content:
        'application/json':
           schema:
             $ref: '#/components/schemas/boat_cords_dto'

      responses:
        '201':
          description: Состояние игры
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game_state_dto'



components:
  securitySchemes:
    bearerAuth:
          description: Bearer token using a JWT
          type: http
          scheme: Bearer
          bearerFormat: JWT


  schemas:

    shot_dto:
      type: object
      descriptioin: Координаты выстрела

      required:
        - x
        - y

      properties:
        x:
          type: integer
          format: int32
        y:
          type: integer
          format: int32

    game_state_dto:
      type: object
      description: Состояние игры

      required:
        - yourName
        - status
        - changeCount

      properties:
        change_count:
          type: integer
          format: int64
          minimum: 0
          examples: [1, 2]
        status:
          type: string
          description: Этап жизненного цикла игры
          enum:
            - Started
            - WaitingSecondPlayer
            - Ended
            - Failed
        oponent_name:
          type: string
          examples : ['njenkins']
        who_shoting:
          description: Активный игрок
          type: string
          examples: ['fizlrock']
        your_field:
          $ref: '#/components/schemas/field_state_dto'
        oponent_field:
          $ref: '#/components/schemas/field_state_dto'
          
    field_state_dto:
      type: string
      description: >
        Состояние игрового поля
      examples: ['AAAABC...AAT']
      

    game_settings_dto:
      type: object
      description: Описание правил игры в морской бой
      required:
        - boat_types_dto
        - game_map_settings_dto
      properties:
        boat_types_dto:
          $ref: '#/components/schemas/boat_types_settings_dto'
        game_map_settings_dto:
          $ref : '#/components/schemas/game_map_settings_dto'

    

    
    placement_strategy_dto:
      description: >
        Стратегия расстановки кораблей
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
        name:
          type: string
      required:
        - id
        - name
      examples:
        - id: 1
          name: Края
        - id: 2
          name: Гусиные лапки


    boat_cords_dto:
      type: array
      description: Описание расположений кораблей на карте 
      items:
        $ref : '#/components/schemas/boat_cord_dto'

    boat_cord_dto:
      type: object
      description: Описание расположения одного корабля на карте
      properties:
        xs:
          type: integer
          format: int32
          description: Координата начала корабля по оси X
        ys:
          type: integer
          format: int32
          description: Координата начала корабля по оси Y
        xe:
          type: integer
          format: int32
          description: Координата конца корабля по оси X
        ye:
          type: integer
          format: int32
          description: Координата конца корабля по оси Y

      examples:
        - xs: 1
          ys: 1
          xe: 4
          ye: 1

    game_map_settings_dto:
      type: object
      description: Описание свойств игрового поля
      required:
        - width
        - height
      properties:
        width:
          type: integer
          format: int32
          minimum: 1
          description: Ширина поля в клетках
        height:
          type: integer
          format: int32
          minimum: 1
          description: Высота поля в клетках
      examples:
        - width: 10
          height: 10


    boat_types_settings_dto:
      description: Список допустимых видов кораблей
      type: array
      items: 
        $ref: '#/components/schemas/boat_type_dto'
      
    
    boat_type_dto:
      type: object
      description: Описание вида корабля
      properties:
        size:
          type: integer
          format: int32
          minimum: 1
          description: Длина корабля в клетках
        count:
          type: integer
          format: int32
          minimum: 1
          description: Кол-во кораблей данного типа в игре
      examples:
        - size: 4
          count: 1

    auth_data_dto:
      type: object
      description: Данные для аутентификации
      properties:
        login:
          type: string
          minLength: 4
          maxLength: 8
          examples: ['fizlrock', 'njenkins']
        password:
          type: string
          minLength: 4
          maxLength: 12
          examples: ['mypass', '12345678']
          
       
